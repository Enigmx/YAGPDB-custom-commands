{{$admin := 0}}
{{$logchannel := 0}}

{{if .ExecData}}
{{$text := print "[unknown channel/user: " (.ExecData.Get "target") "]" }}
{{if (getChannel (toInt (.ExecData.Get "target")))}}
{{$text = print "<#" (.ExecData.Get "target") ">"}}
{{else if (getMember (toInt (.ExecData.Get "target")))}}
{{$text = print "<@" (.ExecData.Get "target") ">"}}
{{end}}
{{$db := (dbGet 0 "watchEnigma").Value}}
{{if eq (len ($db.Get (.ExecData.Get "target"))) 1}}
{{$db.Del (.ExecData.Get "target")}}
{{dbSet 0 "watchEnigma" $db}}
{{sendMessage $logchannel (complexMessage "content" (print "<@" (.ExecData.Get "user") ">") "embed" (cembed "color" 0xeb459f "footer" (sdict "text" "Custom Command watch notification") "description" (print "I will stop watching " $text ", because you asked me to watch only until now. \nThose are the keywords you asked me to catch: " (joinStr "-" (.ExecData.Get "keywords")) ". If anything was caught, you may find it in the log channel.") "author" (sdict "name" ($.User.Username) "icon_url" ($.User.AvatarURL "512"))))}}
{{else}}
{{$user := $db.Get (.ExecData.Get "target")}}
{{$user.Del (toString (.ExecData.Get "user"))}}
{{$db.Set (.ExecData.Get "target") $user}}
{{dbSet 0 "watchEnigma" $db}}
{{sendMessage $logchannel (complexMessage "content" (print "<@" (.ExecData.Get "user") ">") "embed" (cembed "color" 0xeb459f "footer" (sdict "text" "Custom Command watch notification") "description" (print "I will stop watching " $text ", because you asked me to watch only until now. \nThose are the keywords you asked me to catch: " (joinStr "-" (.ExecData.Get "keywords")) ". If anything was caught, you may find it in the log channel.") "author" (sdict "name" ($.User.Username) "icon_url" ($.User.AvatarURL "512"))))}}
{{end}}
{{return}}
{{end}}
{{if not (getRole $admin)}}
This command has not been configured properly; an admin role has not been set. Add the role ID in the first line of the script, for example:
\{\{$admin := 1234567890\}\}.
{{return}}
{{end}}
{{if not (getChannel $logchannel)}}
This command has not been configured properly; a log channel has not been set. Add the channel ID in the second line of the script, for example:
\{\{$logchannel := 1234567890\}\}.
{{return}}
{{end}}
{{$db := (dbGet 0 "watchEnigma").Value}}
{{if not $db}}
{{$db = sdict "roles" "" "channels" "" "users" "" "admin" $admin "tag" (cslice) "nolog" (cslice) "logchannel" $logchannel}}
{{dbSet 0 "watchEnigma" $db}}
Initiated the command, you can now use it.
{{return}}
{{end}}
{{$db.Set "logchannel" $logchannel}}
{{$db.Set "admin" $admin}}
{{dbSet 0 "watchEnigma" $db}}
{{if eq (len .Args) 1}}
{{sendMessage nil (complexMessage "buttons" (sdict "label" "Instant tag" "style" "green" "custom_id" "watchEnigmaInstantTag")  "content" `### Watch a member or channel
Keep track of messages with specific keywords sent by a member or in a channel

__**Usage:**__
-watch [User] [Duration] [Keyword]**/**[Keyword]...
-watch [Channel] [Duration] [keyword]**/**[keyword]...
-watch admin

**__Manual__**
Messages that are picked up are sent in the log channel during the time set. Max duration is of 50 days.
"Instant tag": enable or disable inmediate notification in the log channel if something is caught.`)}}
{{return}}
{{end}}
{{if eq (lower (index .Args 1)) "admin"}}
{{$roles := $db.Get "roles"}}
{{$channels := $db.Get "channels"}}
{{$users := $db.Get "users"}}
{{$rolelist := ""}}
{{$channellist := ""}}
{{$userlist := ""}}
{{$tag := $db.Get "tag"}}
{{range (split $roles "\n")}}
{{$rolelist = print $rolelist "\n<@&" (index (split . " ") 0) ">"}}
{{end}}
{{range (split $channels "\n")}}
{{$channellist = print $channellist "\n<#" (index (split . " ") 0) ">"}}
{{end}}
{{range (split $users "\n")}}
{{$userlist = print $userlist "\n<@" (index (split . " ") 0) ">"}}
{{end}}
{{if eq $rolelist "\n<@&>"}}
{{$rolelist = "\nnothing configured..."}}
{{end}}
{{if eq $channellist "\n<#>"}}
{{$channellist = "\nnothing configured..."}}
{{end}}
{{if eq $userlist "\n<@>"}}
{{$userlist = "\nnothing configured..."}}
{{end}}
{{sendMessage nil (complexMessage "buttons" (cslice (sdict "label" "Edit roles" "style" "green" "custom_id" "watchEnigmaEditRoles") (sdict "label" "Edit channels" "style" "green" "custom_id" "watchEnigmaEditChannels") (sdict "label" "Edit users" "style" "green" "custom_id" "watchEnigmaEditUsers")) "embed" (cslice (cembed "color" 0xeb459f "title" "Inmune roles" "description" (print "The following roles cannot be put an eye on:\n" $rolelist)) (cembed "color" 0xeb459f "title" "Enabled channels" "description" (print "The following channels are enabled to put an eye on:\n" $channellist)) (cembed "color" 0xeb459f "title" "Inmune users" "description" (print "The following users cannot be put an eye on:\n" $userlist))))}}
{{return}}
{{end}}
{{$target := false}}
{{$duration := (toDuration "0s")}}
{{$keywords := cslice}}
{{if (reFind `\d+` (index .Args 1))}}
{{$target = reFind `\d+` (index .Args 1)}}
{{end}}
{{if ge (len .Args) 3}}
{{$duration = toDuration (index .Args 2)}}
{{end}}
{{$skip := 0}}
{{if ge (len .Args) 4}}
{{try}}
{{range (split (index (split .Message.Content (print (index .Args 0) " " (index .Args 1) " " (index .Args 2))) 1) "/")}}
{{if eq (len .) 0}}
{{continue}}
{{end}}
{{$keywords = $keywords.Append (trimSpace .)}}
{{end}}
{{catch}}
You may be confusing the bot a little by adding extra spaces, try running the command again without more than one space between settings.
{{return}}
{{end}}
{{end}}
{{if and (not (getMember $target)) (not (getChannel $target))}}
Seems like you didn't provide an user or channel :(

__**Usage:**__
-watch [User/Channel] [Duration] [Keyword]**/**[Keyword]**/**[Keyword]...
{{return}}
{{end}}
{{if (eq $duration (toDuration "0s"))}}
Seems like you didn't provide a duration :(

__**Usage:**__
-watch [User] [Duration] [Keyword]**/**[Keyword]**/**[Keyword]...
{{return}}
{{end}}
{{if gt $duration (toDuration "50d")}}
{{$duration = toDuration "50d"}}
{{sendMessage nil "Max duration is of 50 days :("}}
{{end}}
{{if eq (len $keywords) 0}}
Seems like you didn't provide keywords :(

__**Usage:**__
-watch [User] [Duration] [Keyword]**/**[Keyword]**/**[Keyword]...
{{return}}
{{end}}
{{$channellist := cslice}}
{{range (split ($db.Get "channels") "\n")}}
{{$channellist = $channellist.Append (index (split . " ") 0)}}
{{end}}
{{if and (not (in $channellist (toString $target))) (getChannel $target)}}
You cannot put a watch on this channel :(
{{return}}
{{end}}
{{$userlist := cslice}}
{{range (split ($db.Get "users") "\n")}}
{{$userlist = $userlist.Append (index (split . " ") 0)}}
{{end}}
{{if in $userlist (toString $target)}}
You cannot put a watch on this person :(
{{return}}
{{end}}
{{$desc := ""}}
{{$sdict := ($db.Get (toString $target))}}
{{if not ($sdict.Get (toString .User.ID))}}
{{$sdict = sdict (toString .User.ID) $keywords}}
{{$db.Set (toString $target) $sdict}}
{{dbSet 0 "watchEnigma" $db}}
{{if (getChannel $target)}}
{{sendMessage nil (complexMessage "content" "Done!" "embed" (cembed "author" (sdict "name" ($.User.Username) "icon_url" ($.User.AvatarURL "512")) "color" 0xeb459f "description" (print $desc "\n\n<#" $target "> will be watched for " $duration ", once I find any message which contains either ''" (joinStr ", " $keywords) "'', I will let you know.")))}}
{{else if (getMember $target)}}
{{sendMessage nil (complexMessage "content" "Done!" "embed" (cembed "author" (sdict "name" ($.User.Username) "icon_url" ($.User.AvatarURL "512")) "color" 0xeb459f "description" (print $desc "\n\n<@" $target "> will be watched for " $duration ", once I find any message which contains either ''" (joinStr ", " $keywords) "'', I will let you know.")))}}
{{end}}
{{scheduleUniqueCC .CCID $logchannel $duration.Seconds (print .User.ID "-" $target) (sdict "keywords" $keywords "target" $target "user" .User.ID)}}
{{return}}
{{end}}
{{$str := ""}}
{{$keywords0 := $sdict.Get (toString .User.ID)}}
{{if $keywords0}}
{{$keywords = $keywords.AppendSlice $keywords0}}
{{end}}
{{$sdict.Set (toString .User.ID) $keywords}}
{{$db.Set (toString $target) $sdict}}
{{dbSet 0 "watchEnigma" $db}}
{{if (getChannel $target)}}
{{sendMessage nil (complexMessage "content" "Wait a second..." "embed" (cembed "author" (sdict "name" ($.User.Username) "icon_url" ($.User.AvatarURL "512")) "color" 0xeb459f "description" (print $desc "\n\nYou have already put a watch on <#" $target ">, so i am going to be merging both the old and new keywords and wil be watching this now: ''" (joinStr ", " $keywords) "''. I will be overwriting the old duration for the new one, which will be for " $duration ".")))}}
{{else if (getMember $target)}}
{{sendMessage nil (complexMessage "content" "Wait a second..." "embed" (cembed "author" (sdict "name" ($.User.Username) "icon_url" ($.User.AvatarURL "512")) "color" 0xeb459f "description" (print $desc "\n\nYou have already put a watch on <@" $target ">, so I am going to be merging both the old and new keywords and wil be watching this now: ''" (joinStr ", " $keywords) "''. I will be overwriting the old duration for the new one, which will be for " $duration ".")))}}
{{end}}
{{scheduleUniqueCC .CCID $logchannel $duration.Seconds (print .User.ID "-" $target) (sdict "keywords" $keywords "target" $target "user" .User.ID)}}
